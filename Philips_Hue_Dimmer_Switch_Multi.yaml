blueprint:
  name: "Philips Hue Dimmer Switch"
  description: Control anything using Philips Hue Dimmer Switch buttons.
  domain: automation
  input:
    remotes:
      name: Dimmer Switches
      selector:
        device:
          multiple: true
          filter:
            - manufacturer: 'Signify Netherlands B.V.'
          entity:
            domain: sensor
            device_class: battery
    on_press:
      name: Button 1 (ON) press
      default: []
      selector:
        action: {}
    up_press:
      name: Button 2 (DIM UP) press
      default: []
      selector:
        action: {}
    down_press:
      name: Button 3 (DIM DOWN) press
      default: []
      selector:
        action: {}
    off_press:
      name: Button 4 (OFF) press
      default: []
      selector:
        action: {}
    on_hold:
      name: Button 1 (ON) hold
      default: []
      selector:
        action: {}
    up_hold:
      name: Button 2 (DIM UP) hold
      default: []
      selector:
        action: {}
    down_hold:
      name: Button 3 (DIM DOWN) hold
      default: []
      selector:
        action: {}
    off_hold:
      name: Button 4 (OFF) hold
      default: []
      selector:
        action: {}
  source_url: https://github.com/Alwinator/homeassistant-blueprints/blob/main/Philips_Hue_Dimmer_Switch_Multi.yaml
mode: queued
max_exceeded: silent
trigger:
  - platform: event
    event_type: zha_event
variables:
  remotes: !input remotes
condition:
  - condition: template
    value_template: "{{ trigger.event.data.device_id in remotes }}"
action:
  - variables:
      command_type: '{{ trigger.event.data.command }}'
  - choose:
    - conditions:
      - '{{ command_type == "on_press" }}'
      sequence: !input on_press
    - conditions:
      - '{{ command_type == "up_press" }}'
      sequence: !input up_press
    - conditions:
      - '{{ command_type == "down_press" }}'
      sequence: !input down_press
    - conditions:
      - '{{ command_type == "off_press" }}'
      sequence: !input off_press
    - conditions:
      - '{{ command_type == "on_hold" }}'
      sequence: !input on_hold
    - conditions:
      - '{{ command_type == "up_hold" }}'
      sequence: !input up_hold
    - conditions:
      - '{{ command_type == "down_hold" }}'
      sequence: !input down_hold
    - conditions:
      - '{{ command_type == "off_hold" }}'
      sequence: !input off_hold
